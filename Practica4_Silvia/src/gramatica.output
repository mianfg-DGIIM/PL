La regla es inútil debido a los conflictos

   14 $@4: %empty


Estado 27 conflictos: 1 reducción/reducción
Estado 67 conflictos: 1 desplazamiento/reducción
Estado 158 conflictos: 1 desplazamiento/reducción


Gramática

    0 $accept: Programa $end

    1 Programa: MAIN bloque

    2 $@1: %empty

    3 bloque: BLOCK_START $@1 bloque_in BLOCK_END

    4 bloque_in: Declar_de_variables_locales Declar_de_subprogs
    5          | Declar_de_variables_locales Declar_de_subprogs Sentencias

    6 Declar_de_subprogs: Declar_de_subprogs Declar_subprog
    7                   | %empty

    8 $@2: %empty

    9 Declar_subprog: Cabecera_subprograma $@2 bloque

   10 tipo: TYPE
   11     | LIST_OF TYPE

   12 $@3: %empty

   13 Cabecera_subprograma: tipo IDENTIFIER $@3 PARENT_START lista_de_parametros PARENT_END

   14 $@4: %empty

   15 Cabecera_subprograma: tipo IDENTIFIER $@4 PARENT_START PARENT_END

   16 $@5: %empty

   17 Declar_de_variables_locales: BEGIN_LOCAL $@5 Variables_locales END_LOCAL
   18                            | %empty

   19 Variables_locales: Variables_locales Cuerpo_declar_variables
   20                  | Cuerpo_declar_variables

   21 $@6: %empty

   22 Cuerpo_declar_variables: tipo $@6 lista_variables COLON

   23 lista_variables: lista_variables COMMA IDENTIFIER
   24                | IDENTIFIER

   25 lista_de_parametros: lista_de_parametros COMMA tipo IDENTIFIER
   26                    | tipo IDENTIFIER

   27 $@7: %empty

   28 Sentencias: Sentencias $@7 Sentencia

   29 $@8: %empty

   30 Sentencias: $@8 Sentencia

   31 Sentencia: bloque
   32          | Sentencia_asignacion
   33          | Sentencia_if
   34          | Sentencia_while
   35          | Sentencia_for
   36          | Sentencia_entrada
   37          | Sentencia_salida
   38          | Sentencia_return
   39          | Sentencia_lista

   40 Sentencia_asignacion: IDENTIFIER ASSIGN expresion COLON

   41 Sentencia_if: IF PARENT_START expresion PARENT_END Sentencia
   42             | IF PARENT_START expresion PARENT_END Sentencia ELSE Sentencia

   43 Sentencia_while: WHILE PARENT_START expresion PARENT_END Sentencia

   44 Sentencia_for: FOR IDENTIFIER ASSIGN expresion TO expresion Sentencia

   45 Sentencia_entrada: INPUT lista_variables COLON
   46                  | INPUT STRING COMMA lista_variables COLON

   47 Sentencia_salida: OUTPUT Lista_expresiones_o_cadena COLON

   48 Lista_expresiones_o_cadena: Lista_expresiones_o_cadena COMMA expresion
   49                           | Lista_expresiones_o_cadena COMMA STRING
   50                           | expresion
   51                           | STRING

   52 @9: %empty

   53 Sentencia_return: RETURN expresion @9 COLON

   54 Sentencia_lista: expresion OP_LIST COLON
   55                | OP_DOLLAR expresion COLON

   56 expresion: PARENT_START expresion PARENT_END
   57          | OP_UNARY expresion
   58          | expresion OP_BINARY_LIST expresion
   59          | expresion OP_BINARY_OR expresion
   60          | expresion OP_BINARY_AND expresion
   61          | expresion OP_BINARY_EQ expresion
   62          | expresion OP_BINARY_REL expresion
   63          | expresion OP_BINARY_MUL expresion
   64          | expresion PLUS_MINUS expresion
   65          | expresion OP_TERNARY_1 expresion OP_TERNARY_2 expresion
   66          | IDENTIFIER
   67          | constante
   68          | funcion

   69 funcion: cabecera_funcion argumentos_funcion

   70 cabecera_funcion: IDENTIFIER PARENT_START

   71 argumentos_funcion: Lista_expresiones PARENT_END
   72                   | PARENT_END

   73 Lista_expresiones: Lista_expresiones COMMA expresion
   74                  | expresion

   75 constante: constante_base
   76          | constante_lista

   77 constante_base: CONST_INT
   78               | CONST_FLOAT
   79               | CONST_BOOL
   80               | CONST_CHAR

   81 constante_lista: BRACKET_START constante_lista_int BRACKET_END
   82                | BRACKET_START constante_lista_float BRACKET_END
   83                | BRACKET_START constante_lista_bool BRACKET_END
   84                | BRACKET_START constante_lista_char BRACKET_END

   85 constante_lista_int: constante_lista_int COMMA CONST_INT
   86                    | CONST_INT

   87 constante_lista_float: constante_lista_float COMMA CONST_FLOAT
   88                      | CONST_FLOAT

   89 constante_lista_bool: constante_lista_bool COMMA CONST_BOOL
   90                     | CONST_BOOL

   91 constante_lista_char: constante_lista_char COMMA CONST_CHAR
   92                     | CONST_CHAR


Terminales con las reglas donde aparecen

    $end (0) 0
    error (256)
    MAIN (258) 1
    BLOCK_START (259) 3
    BLOCK_END (260) 3
    PARENT_START (261) 13 15 41 42 43 56 70
    PARENT_END (262) 13 15 41 42 43 56 71 72
    BRACKET_START (263) 81 82 83 84
    BRACKET_END (264) 81 82 83 84
    COLON (265) 22 40 45 46 47 53 54 55
    COMMA (266) 23 25 46 48 49 73 85 87 89 91
    BEGIN_LOCAL (267) 17
    END_LOCAL (268) 17
    TYPE (269) 10 11
    LIST_OF (270) 11
    ASSIGN (271) 40 44
    IF (272) 41 42
    ELSE (273) 42
    WHILE (274) 43
    FOR (275) 44
    TO (276) 44
    INPUT (277) 45 46
    OUTPUT (278) 47
    RETURN (279) 53
    CONST_INT (280) 77 85 86
    CONST_FLOAT (281) 78 87 88
    CONST_BOOL (282) 79 89 90
    CONST_CHAR (283) 80 91 92
    STRING (284) 46 49 51
    IDENTIFIER (285) 13 15 23 24 25 26 40 44 66 70
    OP_BINARY_LIST (286) 58
    OP_TERNARY_1 (287) 65
    OP_TERNARY_2 (288) 65
    OP_LIST (289) 54
    OP_DOLLAR (290) 55
    OP_BINARY_OR (291) 59
    OP_BINARY_AND (292) 60
    OP_BINARY_EQ (293) 61
    OP_BINARY_REL (294) 62
    PLUS_MINUS (295) 64
    OP_BINARY_MUL (296) 63
    OP_UNARY (297) 57


No terminales con las reglas donde aparecen

    $accept (43)
        on left: 0
    Programa (44)
        on left: 1
        on right: 0
    bloque (45)
        on left: 3
        on right: 1 9 31
    $@1 (46)
        on left: 2
        on right: 3
    bloque_in (47)
        on left: 4 5
        on right: 3
    Declar_de_subprogs (48)
        on left: 6 7
        on right: 4 5 6
    Declar_subprog (49)
        on left: 9
        on right: 6
    $@2 (50)
        on left: 8
        on right: 9
    tipo (51)
        on left: 10 11
        on right: 13 15 22 25 26
    Cabecera_subprograma (52)
        on left: 13 15
        on right: 9
    $@3 (53)
        on left: 12
        on right: 13
    $@4 (54)
        on left: 14
        on right: 15
    Declar_de_variables_locales (55)
        on left: 17 18
        on right: 4 5
    $@5 (56)
        on left: 16
        on right: 17
    Variables_locales (57)
        on left: 19 20
        on right: 17 19
    Cuerpo_declar_variables (58)
        on left: 22
        on right: 19 20
    $@6 (59)
        on left: 21
        on right: 22
    lista_variables (60)
        on left: 23 24
        on right: 22 23 45 46
    lista_de_parametros (61)
        on left: 25 26
        on right: 13 25
    Sentencias (62)
        on left: 28 30
        on right: 5 28
    $@7 (63)
        on left: 27
        on right: 28
    $@8 (64)
        on left: 29
        on right: 30
    Sentencia (65)
        on left: 31 32 33 34 35 36 37 38 39
        on right: 28 30 41 42 43 44
    Sentencia_asignacion (66)
        on left: 40
        on right: 32
    Sentencia_if (67)
        on left: 41 42
        on right: 33
    Sentencia_while (68)
        on left: 43
        on right: 34
    Sentencia_for (69)
        on left: 44
        on right: 35
    Sentencia_entrada (70)
        on left: 45 46
        on right: 36
    Sentencia_salida (71)
        on left: 47
        on right: 37
    Lista_expresiones_o_cadena (72)
        on left: 48 49 50 51
        on right: 47 48 49
    Sentencia_return (73)
        on left: 53
        on right: 38
    @9 (74)
        on left: 52
        on right: 53
    Sentencia_lista (75)
        on left: 54 55
        on right: 39
    expresion (76)
        on left: 56 57 58 59 60 61 62 63 64 65 66 67 68
        on right: 40 41 42 43 44 48 50 53 54 55 56 57 58 59 60 61 62 63 64 65 73 74
    funcion (77)
        on left: 69
        on right: 68
    cabecera_funcion (78)
        on left: 70
        on right: 69
    argumentos_funcion (79)
        on left: 71 72
        on right: 69
    Lista_expresiones (80)
        on left: 73 74
        on right: 71 73
    constante (81)
        on left: 75 76
        on right: 67
    constante_base (82)
        on left: 77 78 79 80
        on right: 75
    constante_lista (83)
        on left: 81 82 83 84
        on right: 76
    constante_lista_int (84)
        on left: 85 86
        on right: 81 85
    constante_lista_float (85)
        on left: 87 88
        on right: 82 87
    constante_lista_bool (86)
        on left: 89 90
        on right: 83 89
    constante_lista_char (87)
        on left: 91 92
        on right: 84 91


Estado 0

    0 $accept: • Programa $end

    MAIN  desplazar e ir al estado 1

    Programa  ir al estado 2


Estado 1

    1 Programa: MAIN • bloque

    BLOCK_START  desplazar e ir al estado 3

    bloque  ir al estado 4


Estado 2

    0 $accept: Programa • $end

    $end  desplazar e ir al estado 5


Estado 3

    3 bloque: BLOCK_START • $@1 bloque_in BLOCK_END

    $default  reduce usando la regla 2 ($@1)

    $@1  ir al estado 6


Estado 4

    1 Programa: MAIN bloque •

    $default  reduce usando la regla 1 (Programa)


Estado 5

    0 $accept: Programa $end •

    $default  aceptar


Estado 6

    3 bloque: BLOCK_START $@1 • bloque_in BLOCK_END

    BEGIN_LOCAL  desplazar e ir al estado 7

    $default  reduce usando la regla 18 (Declar_de_variables_locales)

    bloque_in                    ir al estado 8
    Declar_de_variables_locales  ir al estado 9


Estado 7

   17 Declar_de_variables_locales: BEGIN_LOCAL • $@5 Variables_locales END_LOCAL

    $default  reduce usando la regla 16 ($@5)

    $@5  ir al estado 10


Estado 8

    3 bloque: BLOCK_START $@1 bloque_in • BLOCK_END

    BLOCK_END  desplazar e ir al estado 11


Estado 9

    4 bloque_in: Declar_de_variables_locales • Declar_de_subprogs
    5          | Declar_de_variables_locales • Declar_de_subprogs Sentencias

    $default  reduce usando la regla 7 (Declar_de_subprogs)

    Declar_de_subprogs  ir al estado 12


Estado 10

   17 Declar_de_variables_locales: BEGIN_LOCAL $@5 • Variables_locales END_LOCAL

    TYPE     desplazar e ir al estado 13
    LIST_OF  desplazar e ir al estado 14

    tipo                     ir al estado 15
    Variables_locales        ir al estado 16
    Cuerpo_declar_variables  ir al estado 17


Estado 11

    3 bloque: BLOCK_START $@1 bloque_in BLOCK_END •

    $default  reduce usando la regla 3 (bloque)


Estado 12

    4 bloque_in: Declar_de_variables_locales Declar_de_subprogs •
    5          | Declar_de_variables_locales Declar_de_subprogs • Sentencias
    6 Declar_de_subprogs: Declar_de_subprogs • Declar_subprog

    TYPE     desplazar e ir al estado 13
    LIST_OF  desplazar e ir al estado 14

    BLOCK_END  reduce usando la regla 4 (bloque_in)
    $default   reduce usando la regla 29 ($@8)

    Declar_subprog        ir al estado 18
    tipo                  ir al estado 19
    Cabecera_subprograma  ir al estado 20
    Sentencias            ir al estado 21
    $@8                   ir al estado 22


Estado 13

   10 tipo: TYPE •

    $default  reduce usando la regla 10 (tipo)


Estado 14

   11 tipo: LIST_OF • TYPE

    TYPE  desplazar e ir al estado 23


Estado 15

   22 Cuerpo_declar_variables: tipo • $@6 lista_variables COLON

    $default  reduce usando la regla 21 ($@6)

    $@6  ir al estado 24


Estado 16

   17 Declar_de_variables_locales: BEGIN_LOCAL $@5 Variables_locales • END_LOCAL
   19 Variables_locales: Variables_locales • Cuerpo_declar_variables

    END_LOCAL  desplazar e ir al estado 25
    TYPE       desplazar e ir al estado 13
    LIST_OF    desplazar e ir al estado 14

    tipo                     ir al estado 15
    Cuerpo_declar_variables  ir al estado 26


Estado 17

   20 Variables_locales: Cuerpo_declar_variables •

    $default  reduce usando la regla 20 (Variables_locales)


Estado 18

    6 Declar_de_subprogs: Declar_de_subprogs Declar_subprog •

    $default  reduce usando la regla 6 (Declar_de_subprogs)


Estado 19

   13 Cabecera_subprograma: tipo • IDENTIFIER $@3 PARENT_START lista_de_parametros PARENT_END
   15                     | tipo • IDENTIFIER $@4 PARENT_START PARENT_END

    IDENTIFIER  desplazar e ir al estado 27


Estado 20

    9 Declar_subprog: Cabecera_subprograma • $@2 bloque

    $default  reduce usando la regla 8 ($@2)

    $@2  ir al estado 28


Estado 21

    5 bloque_in: Declar_de_variables_locales Declar_de_subprogs Sentencias •
   28 Sentencias: Sentencias • $@7 Sentencia

    BLOCK_END  reduce usando la regla 5 (bloque_in)
    $default   reduce usando la regla 27 ($@7)

    $@7  ir al estado 29


Estado 22

   30 Sentencias: $@8 • Sentencia

    BLOCK_START    desplazar e ir al estado 3
    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    IF             desplazar e ir al estado 32
    WHILE          desplazar e ir al estado 33
    FOR            desplazar e ir al estado 34
    INPUT          desplazar e ir al estado 35
    OUTPUT         desplazar e ir al estado 36
    RETURN         desplazar e ir al estado 37
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 42
    OP_DOLLAR      desplazar e ir al estado 43
    OP_UNARY       desplazar e ir al estado 44

    bloque                ir al estado 45
    Sentencia             ir al estado 46
    Sentencia_asignacion  ir al estado 47
    Sentencia_if          ir al estado 48
    Sentencia_while       ir al estado 49
    Sentencia_for         ir al estado 50
    Sentencia_entrada     ir al estado 51
    Sentencia_salida      ir al estado 52
    Sentencia_return      ir al estado 53
    Sentencia_lista       ir al estado 54
    expresion             ir al estado 55
    funcion               ir al estado 56
    cabecera_funcion      ir al estado 57
    constante             ir al estado 58
    constante_base        ir al estado 59
    constante_lista       ir al estado 60


Estado 23

   11 tipo: LIST_OF TYPE •

    $default  reduce usando la regla 11 (tipo)


Estado 24

   22 Cuerpo_declar_variables: tipo $@6 • lista_variables COLON

    IDENTIFIER  desplazar e ir al estado 61

    lista_variables  ir al estado 62


Estado 25

   17 Declar_de_variables_locales: BEGIN_LOCAL $@5 Variables_locales END_LOCAL •

    $default  reduce usando la regla 17 (Declar_de_variables_locales)


Estado 26

   19 Variables_locales: Variables_locales Cuerpo_declar_variables •

    $default  reduce usando la regla 19 (Variables_locales)


Estado 27

   13 Cabecera_subprograma: tipo IDENTIFIER • $@3 PARENT_START lista_de_parametros PARENT_END
   15                     | tipo IDENTIFIER • $@4 PARENT_START PARENT_END

    PARENT_START  reduce usando la regla 12 ($@3)
    PARENT_START  [reduce usando la regla 14 ($@4)]
    $default      reduce usando la regla 12 ($@3)

    $@3  ir al estado 63
    $@4  ir al estado 64


Estado 28

    9 Declar_subprog: Cabecera_subprograma $@2 • bloque

    BLOCK_START  desplazar e ir al estado 3

    bloque  ir al estado 65


Estado 29

   28 Sentencias: Sentencias $@7 • Sentencia

    BLOCK_START    desplazar e ir al estado 3
    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    IF             desplazar e ir al estado 32
    WHILE          desplazar e ir al estado 33
    FOR            desplazar e ir al estado 34
    INPUT          desplazar e ir al estado 35
    OUTPUT         desplazar e ir al estado 36
    RETURN         desplazar e ir al estado 37
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 42
    OP_DOLLAR      desplazar e ir al estado 43
    OP_UNARY       desplazar e ir al estado 44

    bloque                ir al estado 45
    Sentencia             ir al estado 66
    Sentencia_asignacion  ir al estado 47
    Sentencia_if          ir al estado 48
    Sentencia_while       ir al estado 49
    Sentencia_for         ir al estado 50
    Sentencia_entrada     ir al estado 51
    Sentencia_salida      ir al estado 52
    Sentencia_return      ir al estado 53
    Sentencia_lista       ir al estado 54
    expresion             ir al estado 55
    funcion               ir al estado 56
    cabecera_funcion      ir al estado 57
    constante             ir al estado 58
    constante_base        ir al estado 59
    constante_lista       ir al estado 60


Estado 30

   56 expresion: PARENT_START • expresion PARENT_END

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 68
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 31

   81 constante_lista: BRACKET_START • constante_lista_int BRACKET_END
   82                | BRACKET_START • constante_lista_float BRACKET_END
   83                | BRACKET_START • constante_lista_bool BRACKET_END
   84                | BRACKET_START • constante_lista_char BRACKET_END

    CONST_INT    desplazar e ir al estado 69
    CONST_FLOAT  desplazar e ir al estado 70
    CONST_BOOL   desplazar e ir al estado 71
    CONST_CHAR   desplazar e ir al estado 72

    constante_lista_int    ir al estado 73
    constante_lista_float  ir al estado 74
    constante_lista_bool   ir al estado 75
    constante_lista_char   ir al estado 76


Estado 32

   41 Sentencia_if: IF • PARENT_START expresion PARENT_END Sentencia
   42             | IF • PARENT_START expresion PARENT_END Sentencia ELSE Sentencia

    PARENT_START  desplazar e ir al estado 77


Estado 33

   43 Sentencia_while: WHILE • PARENT_START expresion PARENT_END Sentencia

    PARENT_START  desplazar e ir al estado 78


Estado 34

   44 Sentencia_for: FOR • IDENTIFIER ASSIGN expresion TO expresion Sentencia

    IDENTIFIER  desplazar e ir al estado 79


Estado 35

   45 Sentencia_entrada: INPUT • lista_variables COLON
   46                  | INPUT • STRING COMMA lista_variables COLON

    STRING      desplazar e ir al estado 80
    IDENTIFIER  desplazar e ir al estado 61

    lista_variables  ir al estado 81


Estado 36

   47 Sentencia_salida: OUTPUT • Lista_expresiones_o_cadena COLON

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    STRING         desplazar e ir al estado 82
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    Lista_expresiones_o_cadena  ir al estado 83
    expresion                   ir al estado 84
    funcion                     ir al estado 56
    cabecera_funcion            ir al estado 57
    constante                   ir al estado 58
    constante_base              ir al estado 59
    constante_lista             ir al estado 60


Estado 37

   53 Sentencia_return: RETURN • expresion @9 COLON

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 85
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 38

   77 constante_base: CONST_INT •

    $default  reduce usando la regla 77 (constante_base)


Estado 39

   78 constante_base: CONST_FLOAT •

    $default  reduce usando la regla 78 (constante_base)


Estado 40

   79 constante_base: CONST_BOOL •

    $default  reduce usando la regla 79 (constante_base)


Estado 41

   80 constante_base: CONST_CHAR •

    $default  reduce usando la regla 80 (constante_base)


Estado 42

   40 Sentencia_asignacion: IDENTIFIER • ASSIGN expresion COLON
   66 expresion: IDENTIFIER •
   70 cabecera_funcion: IDENTIFIER • PARENT_START

    PARENT_START  desplazar e ir al estado 86
    ASSIGN        desplazar e ir al estado 87

    $default  reduce usando la regla 66 (expresion)


Estado 43

   55 Sentencia_lista: OP_DOLLAR • expresion COLON

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 88
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 44

   57 expresion: OP_UNARY • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 89
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 45

   31 Sentencia: bloque •

    $default  reduce usando la regla 31 (Sentencia)


Estado 46

   30 Sentencias: $@8 Sentencia •

    $default  reduce usando la regla 30 (Sentencias)


Estado 47

   32 Sentencia: Sentencia_asignacion •

    $default  reduce usando la regla 32 (Sentencia)


Estado 48

   33 Sentencia: Sentencia_if •

    $default  reduce usando la regla 33 (Sentencia)


Estado 49

   34 Sentencia: Sentencia_while •

    $default  reduce usando la regla 34 (Sentencia)


Estado 50

   35 Sentencia: Sentencia_for •

    $default  reduce usando la regla 35 (Sentencia)


Estado 51

   36 Sentencia: Sentencia_entrada •

    $default  reduce usando la regla 36 (Sentencia)


Estado 52

   37 Sentencia: Sentencia_salida •

    $default  reduce usando la regla 37 (Sentencia)


Estado 53

   38 Sentencia: Sentencia_return •

    $default  reduce usando la regla 38 (Sentencia)


Estado 54

   39 Sentencia: Sentencia_lista •

    $default  reduce usando la regla 39 (Sentencia)


Estado 55

   54 Sentencia_lista: expresion • OP_LIST COLON
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_LIST         desplazar e ir al estado 92
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98


Estado 56

   68 expresion: funcion •

    $default  reduce usando la regla 68 (expresion)


Estado 57

   69 funcion: cabecera_funcion • argumentos_funcion

    PARENT_START   desplazar e ir al estado 30
    PARENT_END     desplazar e ir al estado 99
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion           ir al estado 100
    funcion             ir al estado 56
    cabecera_funcion    ir al estado 57
    argumentos_funcion  ir al estado 101
    Lista_expresiones   ir al estado 102
    constante           ir al estado 58
    constante_base      ir al estado 59
    constante_lista     ir al estado 60


Estado 58

   67 expresion: constante •

    $default  reduce usando la regla 67 (expresion)


Estado 59

   75 constante: constante_base •

    $default  reduce usando la regla 75 (constante)


Estado 60

   76 constante: constante_lista •

    $default  reduce usando la regla 76 (constante)


Estado 61

   24 lista_variables: IDENTIFIER •

    $default  reduce usando la regla 24 (lista_variables)


Estado 62

   22 Cuerpo_declar_variables: tipo $@6 lista_variables • COLON
   23 lista_variables: lista_variables • COMMA IDENTIFIER

    COLON  desplazar e ir al estado 103
    COMMA  desplazar e ir al estado 104


Estado 63

   13 Cabecera_subprograma: tipo IDENTIFIER $@3 • PARENT_START lista_de_parametros PARENT_END

    PARENT_START  desplazar e ir al estado 105


Estado 64

   15 Cabecera_subprograma: tipo IDENTIFIER $@4 • PARENT_START PARENT_END

    PARENT_START  desplazar e ir al estado 106


Estado 65

    9 Declar_subprog: Cabecera_subprograma $@2 bloque •

    $default  reduce usando la regla 9 (Declar_subprog)


Estado 66

   28 Sentencias: Sentencias $@7 Sentencia •

    $default  reduce usando la regla 28 (Sentencias)


Estado 67

   66 expresion: IDENTIFIER •
   70 cabecera_funcion: IDENTIFIER • PARENT_START

    PARENT_START  desplazar e ir al estado 86

    PARENT_START  [reduce usando la regla 66 (expresion)]
    $default      reduce usando la regla 66 (expresion)


Estado 68

   56 expresion: PARENT_START expresion • PARENT_END
   58          | expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    PARENT_END      desplazar e ir al estado 107
    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98


Estado 69

   86 constante_lista_int: CONST_INT •

    $default  reduce usando la regla 86 (constante_lista_int)


Estado 70

   88 constante_lista_float: CONST_FLOAT •

    $default  reduce usando la regla 88 (constante_lista_float)


Estado 71

   90 constante_lista_bool: CONST_BOOL •

    $default  reduce usando la regla 90 (constante_lista_bool)


Estado 72

   92 constante_lista_char: CONST_CHAR •

    $default  reduce usando la regla 92 (constante_lista_char)


Estado 73

   81 constante_lista: BRACKET_START constante_lista_int • BRACKET_END
   85 constante_lista_int: constante_lista_int • COMMA CONST_INT

    BRACKET_END  desplazar e ir al estado 108
    COMMA        desplazar e ir al estado 109


Estado 74

   82 constante_lista: BRACKET_START constante_lista_float • BRACKET_END
   87 constante_lista_float: constante_lista_float • COMMA CONST_FLOAT

    BRACKET_END  desplazar e ir al estado 110
    COMMA        desplazar e ir al estado 111


Estado 75

   83 constante_lista: BRACKET_START constante_lista_bool • BRACKET_END
   89 constante_lista_bool: constante_lista_bool • COMMA CONST_BOOL

    BRACKET_END  desplazar e ir al estado 112
    COMMA        desplazar e ir al estado 113


Estado 76

   84 constante_lista: BRACKET_START constante_lista_char • BRACKET_END
   91 constante_lista_char: constante_lista_char • COMMA CONST_CHAR

    BRACKET_END  desplazar e ir al estado 114
    COMMA        desplazar e ir al estado 115


Estado 77

   41 Sentencia_if: IF PARENT_START • expresion PARENT_END Sentencia
   42             | IF PARENT_START • expresion PARENT_END Sentencia ELSE Sentencia

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 116
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 78

   43 Sentencia_while: WHILE PARENT_START • expresion PARENT_END Sentencia

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 117
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 79

   44 Sentencia_for: FOR IDENTIFIER • ASSIGN expresion TO expresion Sentencia

    ASSIGN  desplazar e ir al estado 118


Estado 80

   46 Sentencia_entrada: INPUT STRING • COMMA lista_variables COLON

    COMMA  desplazar e ir al estado 119


Estado 81

   23 lista_variables: lista_variables • COMMA IDENTIFIER
   45 Sentencia_entrada: INPUT lista_variables • COLON

    COLON  desplazar e ir al estado 120
    COMMA  desplazar e ir al estado 104


Estado 82

   51 Lista_expresiones_o_cadena: STRING •

    $default  reduce usando la regla 51 (Lista_expresiones_o_cadena)


Estado 83

   47 Sentencia_salida: OUTPUT Lista_expresiones_o_cadena • COLON
   48 Lista_expresiones_o_cadena: Lista_expresiones_o_cadena • COMMA expresion
   49                           | Lista_expresiones_o_cadena • COMMA STRING

    COLON  desplazar e ir al estado 121
    COMMA  desplazar e ir al estado 122


Estado 84

   50 Lista_expresiones_o_cadena: expresion •
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98

    $default  reduce usando la regla 50 (Lista_expresiones_o_cadena)


Estado 85

   53 Sentencia_return: RETURN expresion • @9 COLON
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98

    $default  reduce usando la regla 52 (@9)

    @9  ir al estado 123


Estado 86

   70 cabecera_funcion: IDENTIFIER PARENT_START •

    $default  reduce usando la regla 70 (cabecera_funcion)


Estado 87

   40 Sentencia_asignacion: IDENTIFIER ASSIGN • expresion COLON

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 124
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 88

   55 Sentencia_lista: OP_DOLLAR expresion • COLON
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    COLON           desplazar e ir al estado 125
    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98


Estado 89

   57 expresion: OP_UNARY expresion •
   58          | expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    $default  reduce usando la regla 57 (expresion)


Estado 90

   58 expresion: expresion OP_BINARY_LIST • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 126
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 91

   65 expresion: expresion OP_TERNARY_1 • expresion OP_TERNARY_2 expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 127
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 92

   54 Sentencia_lista: expresion OP_LIST • COLON

    COLON  desplazar e ir al estado 128


Estado 93

   59 expresion: expresion OP_BINARY_OR • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 129
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 94

   60 expresion: expresion OP_BINARY_AND • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 130
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 95

   61 expresion: expresion OP_BINARY_EQ • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 131
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 96

   62 expresion: expresion OP_BINARY_REL • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 132
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 97

   64 expresion: expresion PLUS_MINUS • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 133
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 98

   63 expresion: expresion OP_BINARY_MUL • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 134
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 99

   72 argumentos_funcion: PARENT_END •

    $default  reduce usando la regla 72 (argumentos_funcion)


Estado 100

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion
   74 Lista_expresiones: expresion •

    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98

    $default  reduce usando la regla 74 (Lista_expresiones)


Estado 101

   69 funcion: cabecera_funcion argumentos_funcion •

    $default  reduce usando la regla 69 (funcion)


Estado 102

   71 argumentos_funcion: Lista_expresiones • PARENT_END
   73 Lista_expresiones: Lista_expresiones • COMMA expresion

    PARENT_END  desplazar e ir al estado 135
    COMMA       desplazar e ir al estado 136


Estado 103

   22 Cuerpo_declar_variables: tipo $@6 lista_variables COLON •

    $default  reduce usando la regla 22 (Cuerpo_declar_variables)


Estado 104

   23 lista_variables: lista_variables COMMA • IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 137


Estado 105

   13 Cabecera_subprograma: tipo IDENTIFIER $@3 PARENT_START • lista_de_parametros PARENT_END

    TYPE     desplazar e ir al estado 13
    LIST_OF  desplazar e ir al estado 14

    tipo                 ir al estado 138
    lista_de_parametros  ir al estado 139


Estado 106

   15 Cabecera_subprograma: tipo IDENTIFIER $@4 PARENT_START • PARENT_END

    PARENT_END  desplazar e ir al estado 140


Estado 107

   56 expresion: PARENT_START expresion PARENT_END •

    $default  reduce usando la regla 56 (expresion)


Estado 108

   81 constante_lista: BRACKET_START constante_lista_int BRACKET_END •

    $default  reduce usando la regla 81 (constante_lista)


Estado 109

   85 constante_lista_int: constante_lista_int COMMA • CONST_INT

    CONST_INT  desplazar e ir al estado 141


Estado 110

   82 constante_lista: BRACKET_START constante_lista_float BRACKET_END •

    $default  reduce usando la regla 82 (constante_lista)


Estado 111

   87 constante_lista_float: constante_lista_float COMMA • CONST_FLOAT

    CONST_FLOAT  desplazar e ir al estado 142


Estado 112

   83 constante_lista: BRACKET_START constante_lista_bool BRACKET_END •

    $default  reduce usando la regla 83 (constante_lista)


Estado 113

   89 constante_lista_bool: constante_lista_bool COMMA • CONST_BOOL

    CONST_BOOL  desplazar e ir al estado 143


Estado 114

   84 constante_lista: BRACKET_START constante_lista_char BRACKET_END •

    $default  reduce usando la regla 84 (constante_lista)


Estado 115

   91 constante_lista_char: constante_lista_char COMMA • CONST_CHAR

    CONST_CHAR  desplazar e ir al estado 144


Estado 116

   41 Sentencia_if: IF PARENT_START expresion • PARENT_END Sentencia
   42             | IF PARENT_START expresion • PARENT_END Sentencia ELSE Sentencia
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    PARENT_END      desplazar e ir al estado 145
    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98


Estado 117

   43 Sentencia_while: WHILE PARENT_START expresion • PARENT_END Sentencia
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    PARENT_END      desplazar e ir al estado 146
    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98


Estado 118

   44 Sentencia_for: FOR IDENTIFIER ASSIGN • expresion TO expresion Sentencia

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 147
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 119

   46 Sentencia_entrada: INPUT STRING COMMA • lista_variables COLON

    IDENTIFIER  desplazar e ir al estado 61

    lista_variables  ir al estado 148


Estado 120

   45 Sentencia_entrada: INPUT lista_variables COLON •

    $default  reduce usando la regla 45 (Sentencia_entrada)


Estado 121

   47 Sentencia_salida: OUTPUT Lista_expresiones_o_cadena COLON •

    $default  reduce usando la regla 47 (Sentencia_salida)


Estado 122

   48 Lista_expresiones_o_cadena: Lista_expresiones_o_cadena COMMA • expresion
   49                           | Lista_expresiones_o_cadena COMMA • STRING

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    STRING         desplazar e ir al estado 149
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 150
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 123

   53 Sentencia_return: RETURN expresion @9 • COLON

    COLON  desplazar e ir al estado 151


Estado 124

   40 Sentencia_asignacion: IDENTIFIER ASSIGN expresion • COLON
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    COLON           desplazar e ir al estado 152
    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98


Estado 125

   55 Sentencia_lista: OP_DOLLAR expresion COLON •

    $default  reduce usando la regla 55 (Sentencia_lista)


Estado 126

   58 expresion: expresion • OP_BINARY_LIST expresion
   58          | expresion OP_BINARY_LIST expresion •
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98

    $default  reduce usando la regla 58 (expresion)


Estado 127

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion
   65          | expresion OP_TERNARY_1 expresion • OP_TERNARY_2 expresion

    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_TERNARY_2    desplazar e ir al estado 153
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98


Estado 128

   54 Sentencia_lista: expresion OP_LIST COLON •

    $default  reduce usando la regla 54 (Sentencia_lista)


Estado 129

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   59          | expresion OP_BINARY_OR expresion •
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_AND  desplazar e ir al estado 94
    OP_BINARY_EQ   desplazar e ir al estado 95
    OP_BINARY_REL  desplazar e ir al estado 96
    PLUS_MINUS     desplazar e ir al estado 97
    OP_BINARY_MUL  desplazar e ir al estado 98

    $default  reduce usando la regla 59 (expresion)


Estado 130

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   60          | expresion OP_BINARY_AND expresion •
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_EQ   desplazar e ir al estado 95
    OP_BINARY_REL  desplazar e ir al estado 96
    PLUS_MINUS     desplazar e ir al estado 97
    OP_BINARY_MUL  desplazar e ir al estado 98

    $default  reduce usando la regla 60 (expresion)


Estado 131

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   61          | expresion OP_BINARY_EQ expresion •
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_REL  desplazar e ir al estado 96
    PLUS_MINUS     desplazar e ir al estado 97
    OP_BINARY_MUL  desplazar e ir al estado 98

    $default  reduce usando la regla 61 (expresion)


Estado 132

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   62          | expresion OP_BINARY_REL expresion •
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    PLUS_MINUS     desplazar e ir al estado 97
    OP_BINARY_MUL  desplazar e ir al estado 98

    $default  reduce usando la regla 62 (expresion)


Estado 133

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   64          | expresion PLUS_MINUS expresion •
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_MUL  desplazar e ir al estado 98

    PLUS_MINUS  error (no asociativo)

    $default  reduce usando la regla 64 (expresion)


Estado 134

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   63          | expresion OP_BINARY_MUL expresion •
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_MUL  desplazar e ir al estado 98

    $default  reduce usando la regla 63 (expresion)


Estado 135

   71 argumentos_funcion: Lista_expresiones PARENT_END •

    $default  reduce usando la regla 71 (argumentos_funcion)


Estado 136

   73 Lista_expresiones: Lista_expresiones COMMA • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 154
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 137

   23 lista_variables: lista_variables COMMA IDENTIFIER •

    $default  reduce usando la regla 23 (lista_variables)


Estado 138

   26 lista_de_parametros: tipo • IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 155


Estado 139

   13 Cabecera_subprograma: tipo IDENTIFIER $@3 PARENT_START lista_de_parametros • PARENT_END
   25 lista_de_parametros: lista_de_parametros • COMMA tipo IDENTIFIER

    PARENT_END  desplazar e ir al estado 156
    COMMA       desplazar e ir al estado 157


Estado 140

   15 Cabecera_subprograma: tipo IDENTIFIER $@4 PARENT_START PARENT_END •

    $default  reduce usando la regla 15 (Cabecera_subprograma)


Estado 141

   85 constante_lista_int: constante_lista_int COMMA CONST_INT •

    $default  reduce usando la regla 85 (constante_lista_int)


Estado 142

   87 constante_lista_float: constante_lista_float COMMA CONST_FLOAT •

    $default  reduce usando la regla 87 (constante_lista_float)


Estado 143

   89 constante_lista_bool: constante_lista_bool COMMA CONST_BOOL •

    $default  reduce usando la regla 89 (constante_lista_bool)


Estado 144

   91 constante_lista_char: constante_lista_char COMMA CONST_CHAR •

    $default  reduce usando la regla 91 (constante_lista_char)


Estado 145

   41 Sentencia_if: IF PARENT_START expresion PARENT_END • Sentencia
   42             | IF PARENT_START expresion PARENT_END • Sentencia ELSE Sentencia

    BLOCK_START    desplazar e ir al estado 3
    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    IF             desplazar e ir al estado 32
    WHILE          desplazar e ir al estado 33
    FOR            desplazar e ir al estado 34
    INPUT          desplazar e ir al estado 35
    OUTPUT         desplazar e ir al estado 36
    RETURN         desplazar e ir al estado 37
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 42
    OP_DOLLAR      desplazar e ir al estado 43
    OP_UNARY       desplazar e ir al estado 44

    bloque                ir al estado 45
    Sentencia             ir al estado 158
    Sentencia_asignacion  ir al estado 47
    Sentencia_if          ir al estado 48
    Sentencia_while       ir al estado 49
    Sentencia_for         ir al estado 50
    Sentencia_entrada     ir al estado 51
    Sentencia_salida      ir al estado 52
    Sentencia_return      ir al estado 53
    Sentencia_lista       ir al estado 54
    expresion             ir al estado 55
    funcion               ir al estado 56
    cabecera_funcion      ir al estado 57
    constante             ir al estado 58
    constante_base        ir al estado 59
    constante_lista       ir al estado 60


Estado 146

   43 Sentencia_while: WHILE PARENT_START expresion PARENT_END • Sentencia

    BLOCK_START    desplazar e ir al estado 3
    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    IF             desplazar e ir al estado 32
    WHILE          desplazar e ir al estado 33
    FOR            desplazar e ir al estado 34
    INPUT          desplazar e ir al estado 35
    OUTPUT         desplazar e ir al estado 36
    RETURN         desplazar e ir al estado 37
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 42
    OP_DOLLAR      desplazar e ir al estado 43
    OP_UNARY       desplazar e ir al estado 44

    bloque                ir al estado 45
    Sentencia             ir al estado 159
    Sentencia_asignacion  ir al estado 47
    Sentencia_if          ir al estado 48
    Sentencia_while       ir al estado 49
    Sentencia_for         ir al estado 50
    Sentencia_entrada     ir al estado 51
    Sentencia_salida      ir al estado 52
    Sentencia_return      ir al estado 53
    Sentencia_lista       ir al estado 54
    expresion             ir al estado 55
    funcion               ir al estado 56
    cabecera_funcion      ir al estado 57
    constante             ir al estado 58
    constante_base        ir al estado 59
    constante_lista       ir al estado 60


Estado 147

   44 Sentencia_for: FOR IDENTIFIER ASSIGN expresion • TO expresion Sentencia
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    TO              desplazar e ir al estado 160
    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98


Estado 148

   23 lista_variables: lista_variables • COMMA IDENTIFIER
   46 Sentencia_entrada: INPUT STRING COMMA lista_variables • COLON

    COLON  desplazar e ir al estado 161
    COMMA  desplazar e ir al estado 104


Estado 149

   49 Lista_expresiones_o_cadena: Lista_expresiones_o_cadena COMMA STRING •

    $default  reduce usando la regla 49 (Lista_expresiones_o_cadena)


Estado 150

   48 Lista_expresiones_o_cadena: Lista_expresiones_o_cadena COMMA expresion •
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98

    $default  reduce usando la regla 48 (Lista_expresiones_o_cadena)


Estado 151

   53 Sentencia_return: RETURN expresion @9 COLON •

    $default  reduce usando la regla 53 (Sentencia_return)


Estado 152

   40 Sentencia_asignacion: IDENTIFIER ASSIGN expresion COLON •

    $default  reduce usando la regla 40 (Sentencia_asignacion)


Estado 153

   65 expresion: expresion OP_TERNARY_1 expresion OP_TERNARY_2 • expresion

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 162
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 154

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion
   73 Lista_expresiones: Lista_expresiones COMMA expresion •

    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98

    $default  reduce usando la regla 73 (Lista_expresiones)


Estado 155

   26 lista_de_parametros: tipo IDENTIFIER •

    $default  reduce usando la regla 26 (lista_de_parametros)


Estado 156

   13 Cabecera_subprograma: tipo IDENTIFIER $@3 PARENT_START lista_de_parametros PARENT_END •

    $default  reduce usando la regla 13 (Cabecera_subprograma)


Estado 157

   25 lista_de_parametros: lista_de_parametros COMMA • tipo IDENTIFIER

    TYPE     desplazar e ir al estado 13
    LIST_OF  desplazar e ir al estado 14

    tipo  ir al estado 163


Estado 158

   41 Sentencia_if: IF PARENT_START expresion PARENT_END Sentencia •
   42             | IF PARENT_START expresion PARENT_END Sentencia • ELSE Sentencia

    ELSE  desplazar e ir al estado 164

    ELSE      [reduce usando la regla 41 (Sentencia_if)]
    $default  reduce usando la regla 41 (Sentencia_if)


Estado 159

   43 Sentencia_while: WHILE PARENT_START expresion PARENT_END Sentencia •

    $default  reduce usando la regla 43 (Sentencia_while)


Estado 160

   44 Sentencia_for: FOR IDENTIFIER ASSIGN expresion TO • expresion Sentencia

    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 67
    OP_UNARY       desplazar e ir al estado 44

    expresion         ir al estado 165
    funcion           ir al estado 56
    cabecera_funcion  ir al estado 57
    constante         ir al estado 58
    constante_base    ir al estado 59
    constante_lista   ir al estado 60


Estado 161

   46 Sentencia_entrada: INPUT STRING COMMA lista_variables COLON •

    $default  reduce usando la regla 46 (Sentencia_entrada)


Estado 162

   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion
   65          | expresion OP_TERNARY_1 expresion OP_TERNARY_2 expresion •

    OP_BINARY_OR   desplazar e ir al estado 93
    OP_BINARY_AND  desplazar e ir al estado 94
    OP_BINARY_EQ   desplazar e ir al estado 95
    OP_BINARY_REL  desplazar e ir al estado 96
    PLUS_MINUS     desplazar e ir al estado 97
    OP_BINARY_MUL  desplazar e ir al estado 98

    $default  reduce usando la regla 65 (expresion)


Estado 163

   25 lista_de_parametros: lista_de_parametros COMMA tipo • IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 166


Estado 164

   42 Sentencia_if: IF PARENT_START expresion PARENT_END Sentencia ELSE • Sentencia

    BLOCK_START    desplazar e ir al estado 3
    PARENT_START   desplazar e ir al estado 30
    BRACKET_START  desplazar e ir al estado 31
    IF             desplazar e ir al estado 32
    WHILE          desplazar e ir al estado 33
    FOR            desplazar e ir al estado 34
    INPUT          desplazar e ir al estado 35
    OUTPUT         desplazar e ir al estado 36
    RETURN         desplazar e ir al estado 37
    CONST_INT      desplazar e ir al estado 38
    CONST_FLOAT    desplazar e ir al estado 39
    CONST_BOOL     desplazar e ir al estado 40
    CONST_CHAR     desplazar e ir al estado 41
    IDENTIFIER     desplazar e ir al estado 42
    OP_DOLLAR      desplazar e ir al estado 43
    OP_UNARY       desplazar e ir al estado 44

    bloque                ir al estado 45
    Sentencia             ir al estado 167
    Sentencia_asignacion  ir al estado 47
    Sentencia_if          ir al estado 48
    Sentencia_while       ir al estado 49
    Sentencia_for         ir al estado 50
    Sentencia_entrada     ir al estado 51
    Sentencia_salida      ir al estado 52
    Sentencia_return      ir al estado 53
    Sentencia_lista       ir al estado 54
    expresion             ir al estado 55
    funcion               ir al estado 56
    cabecera_funcion      ir al estado 57
    constante             ir al estado 58
    constante_base        ir al estado 59
    constante_lista       ir al estado 60


Estado 165

   44 Sentencia_for: FOR IDENTIFIER ASSIGN expresion TO expresion • Sentencia
   58 expresion: expresion • OP_BINARY_LIST expresion
   59          | expresion • OP_BINARY_OR expresion
   60          | expresion • OP_BINARY_AND expresion
   61          | expresion • OP_BINARY_EQ expresion
   62          | expresion • OP_BINARY_REL expresion
   63          | expresion • OP_BINARY_MUL expresion
   64          | expresion • PLUS_MINUS expresion
   65          | expresion • OP_TERNARY_1 expresion OP_TERNARY_2 expresion

    BLOCK_START     desplazar e ir al estado 3
    PARENT_START    desplazar e ir al estado 30
    BRACKET_START   desplazar e ir al estado 31
    IF              desplazar e ir al estado 32
    WHILE           desplazar e ir al estado 33
    FOR             desplazar e ir al estado 34
    INPUT           desplazar e ir al estado 35
    OUTPUT          desplazar e ir al estado 36
    RETURN          desplazar e ir al estado 37
    CONST_INT       desplazar e ir al estado 38
    CONST_FLOAT     desplazar e ir al estado 39
    CONST_BOOL      desplazar e ir al estado 40
    CONST_CHAR      desplazar e ir al estado 41
    IDENTIFIER      desplazar e ir al estado 42
    OP_BINARY_LIST  desplazar e ir al estado 90
    OP_TERNARY_1    desplazar e ir al estado 91
    OP_DOLLAR       desplazar e ir al estado 43
    OP_BINARY_OR    desplazar e ir al estado 93
    OP_BINARY_AND   desplazar e ir al estado 94
    OP_BINARY_EQ    desplazar e ir al estado 95
    OP_BINARY_REL   desplazar e ir al estado 96
    PLUS_MINUS      desplazar e ir al estado 97
    OP_BINARY_MUL   desplazar e ir al estado 98
    OP_UNARY        desplazar e ir al estado 44

    bloque                ir al estado 45
    Sentencia             ir al estado 168
    Sentencia_asignacion  ir al estado 47
    Sentencia_if          ir al estado 48
    Sentencia_while       ir al estado 49
    Sentencia_for         ir al estado 50
    Sentencia_entrada     ir al estado 51
    Sentencia_salida      ir al estado 52
    Sentencia_return      ir al estado 53
    Sentencia_lista       ir al estado 54
    expresion             ir al estado 55
    funcion               ir al estado 56
    cabecera_funcion      ir al estado 57
    constante             ir al estado 58
    constante_base        ir al estado 59
    constante_lista       ir al estado 60


Estado 166

   25 lista_de_parametros: lista_de_parametros COMMA tipo IDENTIFIER •

    $default  reduce usando la regla 25 (lista_de_parametros)


Estado 167

   42 Sentencia_if: IF PARENT_START expresion PARENT_END Sentencia ELSE Sentencia •

    $default  reduce usando la regla 42 (Sentencia_if)


Estado 168

   44 Sentencia_for: FOR IDENTIFIER ASSIGN expresion TO expresion Sentencia •

    $default  reduce usando la regla 44 (Sentencia_for)
